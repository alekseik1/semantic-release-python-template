name: Install Python deps
description: Install Python deps using Poetry

runs:
  using: "composite"
  steps:
  - name: Set up Python 3.10
    uses: actions/setup-python@v3
    with:
      python-version: "3.10"
  - name: Load cached Poetry installation
    id: cached-poetry
    uses: actions/cache@v3
    with:
      path: ~/.local  # the path depends on the OS
      key: poetry-0  # increment to reset cache
  #----------------------------------------------
  #  -----  install & configure poetry  -----
  #----------------------------------------------
  - name: Install Poetry
    if: steps.cached-poetry.outputs.cache-hit != 'true'
    uses: snok/install-poetry@v1
  # workaround https://github.com/snok/install-poetry/issues/111#issuecomment-1343822101
  - run: |
      poetry config virtualenvs.in-project true
      poetry config virtualenvs.create true
    shell: bash
  #----------------------------------------------
  #       load cached venv if cache exists
  #----------------------------------------------
  - name: Load cached venv
    id: cached-poetry-dependencies
    uses: actions/cache@v3
    with:
      path: .venv
      key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
  #----------------------------------------------
  # install dependencies if cache does not exist
  #----------------------------------------------
  - name: Install dependencies
    if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    run: poetry install --no-interaction --no-root
    shell: bash
  #----------------------------------------------
  # install your root project, if required
  #----------------------------------------------
  - name: Install library
    run: poetry install --no-interaction
    shell: bash
